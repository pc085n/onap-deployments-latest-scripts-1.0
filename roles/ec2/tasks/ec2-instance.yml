---
- name: Read properties
  run_once: true
  include_vars:
    file: onap-deploy-properties.yml
    name: properties

- name: Get EC2 instance IDs
  run_once: true
  ec2_instance_facts:
    filters:
      "tag:Name": "{{ properties['node-prefix'] }}-{{ a }}*"
      instance-state-name: running
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register: ec2

- name: display instances
  run_once: true
  debug:
    var: ec2

- name: count running instances
  run_once: true
  set_fact: ec2_count={{ ec2_count | int + 1 }}
  loop: "{{ ec2.instances | default([]) }}"
  when: item.private_ip_address is defined

- name: display count
  debug:
    var: ec2_count

- name: create new instances
  include: ec2-provision.yml
  vars:
    tag_type: "{{ a }}"
    tag_name_prefix: "{{ properties['node-prefix'] }}-{{ a }}"
    host_group: "{{ b }}"
    instance_type: "{{ c }}"
    image: "{{ d }}"
    volume_size: "{{ e }}"
    dev_name: "{{ f }}"
    vol_type: "{{ g }}"
    host_count: "{{ h }}"
  when: ec2_count == 0

- name: Get EC2 facts of instances
  run_once: true
  ec2_instance_facts:
    filters:
      "tag:Name": "{{ properties['node-prefix'] }}-{{ a }}*"
      instance-state-name: running
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register: ec2

- name: Add existing hosts so that we can further contact it
  add_host:
    name: "{{ item.private_ip_address }}"
    groups: "{{ a }}s"
  loop: "{{ ec2.instances | default([]) }}"
  when: item.private_ip_address is defined

### worker-specific ONLY

- name: construct tag
  include: tag.yml
  vars:
    resource: "{{ ec2 }}"
    tag_type: "{{ a }}"
  when:
    - "'{{ b }}' == 'workers'"

