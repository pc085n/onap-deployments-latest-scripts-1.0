---
- name: Read properties
  run_once: true
  include_vars:
    file: onap-deploy-properties.yml
    name: properties

- name: create new instances
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    group: "{{ security_group }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    wait: yes
    region: "{{ region }}"
    keypair: "{{ keypair }}"
    exact_count: "{{host_count}}"
    count_tag: "{{ tag_name_prefix }}"
    vpc_subnet_id: "{{ vpc_suid }}"
    assign_public_ip: yes
    volumes:
      - device_name: "{{ dev_name }}"
        volume_type: "{{ vol_type }}"
        volume_size: "{{ volume_size }}"
        delete_on_termination: true
  register: ec2onap

- name: Add the newly created host so that we can further contact it
  add_host:
    name: "{{ item.private_ip }}"
    groups: "{{ host_group }}"
  loop: "{{ ec2onap.instances | default([]) }}"

- name: Add tag to Instance(s)
  ec2_tag:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    resource: "{{ item.id }}"
    region: "{{ region }}"
    state: "present"
  loop: "{{ ec2onap.instances | default([]) }}"
  loop_control:
    index_var: index
  args:
    tags:
      Type: "{{ tag_type }}"
      Name: "{{ tag_name_prefix }}-{{ index + 1 }}"

###

- name: Assign EIP when available
  ec2_eip:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    state: "present"
    device_id: "{{ item.id }}"
    ip: "{{ properties['eip-address'] }}"
  loop: "{{ ec2onap.instances | default([]) }}"
  when:
    - properties['eip-address'] != ""
    - host_group == "nfs"

###

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.private_ip }}"
    port: 22
    state: started
  loop: "{{ ec2onap.instances | default([]) }}"

- name: accept new public ip ssh fingerprints
  shell: "ssh-keyscan -H {{ item.public_ip }} >> {{ properties['ssh-directory'] }}known_hosts"
  loop: '{{ ec2onap.instances | default([]) }}'

- name: accept new private ssh fingerprints
  shell: "ssh-keyscan -H {{ item.private_ip }} >> {{ properties['ssh-directory'] }}known_hosts"
  loop: '{{ ec2onap.instances | default([]) }}'

